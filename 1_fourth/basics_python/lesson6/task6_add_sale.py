"""
Реализовать простую систему хранения данных о суммах продаж булочной. Должно быть два скрипта с интерфейсом командной строки:
 для записи данных и для вывода на экран записанных данных. При записи передавать из командной строки значение суммы продаж. 
 Для чтения данных реализовать в командной строке следующую логику:
. просто запуск скрипта — выводить все записи;
. запуск скрипта с одним параметром-числом — выводить все записи с номера, равного этому числу, до конца;
. запуск скрипта с двумя числами — выводить записи, начиная с номера, равного первому числу, по номер, равный второму числу, включительно.
Подумать, как избежать чтения всего файла при реализации второго и третьего случаев.
Данные хранить в файле bakery.csv в кодировке utf-8. Нумерация записей начинается с 1. Примеры запуска скриптов:

python add_sale.py 5978,5
python add_sale.py 8914,3
python add_sale.py 7879,1
python add_sale.py 1573,7
python show_sales.py
5978,5
8914,3
7879,1
1573,7
python show_sales.py 3
7879,1
1573,7
python show_sales.py 1 3
5978,5
8914,3
7879,1
"""

import sys
import json


# Решение для хранения данных в виде json.
# Для записи в файл оно более ёмкое, зато при чтении можно легко итерироваться по списку.
# Однако для реализации 7 задания такой вариант хранения продаж не подходит, либо я не понял как вытащить конкретное значение из списка не читая его полностью.
"""
if len(sys.argv) > 1:
    with open('bakery.csv', 'r+') as add:
        update = add.readline().strip()
        if update == '':
            update_summ = [sys.argv[1]]
        else:
            update_summ = json.loads(update)
            update_summ.append(sys.argv[1])
        add.seek(0)
        add.truncate()
        add.write(json.dumps(update_summ))
else:
    print('Введите сумму продаж')
"""



# Решение, храня данные построчно. Подходит для выполнения задания 7.
if len(sys.argv) > 1:
    with open('bakery.csv', 'a') as add:
        add.write(f'{sys.argv[1]}\n')
else:
    print('Введите сумму продаж')
